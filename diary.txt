21/06/13
正直TitalyverWeb弄ってもサーバー経由での情報力が弱いので（一応今ならSpotifyConnect？とかあるけど、そして歌詞APIは基本お金がかかる）
だったらWindows版を弄りなおしたほうが、ということで、なんとなくフルC#のwpfでやってみる？と軽い気持ちで試行錯誤し始めて早一週間。
wpfの（主に描画）システムを理解するのに難航中。便利なんだろうけど、依存関係プロパティとかバインディングとかしんどい。
最初は前と同じくビットマップ化したフォントキャッシュでやるつもりだったが、GeometryとBrushで結構やれそうだったので、
TextBlock→FormattedText→GlyphRun（Glyphs）と潜っていくも、Glyphsだとサロゲートペアを手動で対応しないといけないっぽい？
ので、だったらと、結局GlyphTypeface.GetGlyphOutlineにたどり着いてしまった。
そしてなんとか縁取り文字をカスタムコントロールでデザイナでも表示するところまでは来れた。


21/06/05
とか何とか言ってる間にTest以外はとりあえず完了。
まあいくつか特定条件下での微妙にバグっぽい動作は確認/推定できてるんだが、対処が細かく面倒なのでとりあえず放置。
あとCanvasは自前でルビ処理をしないといけないのがめんどい。
やるにしてもTitalyverWebで実験してからかな。

21/06/04
js抜きindex.htmlもCSSの肥大化とBodyもそこそこ膨らんで大分面倒になってきた。
html構造はモードごとに動的生成してCSSもモード別に分類か。

21/06/03
こいつに入力するルビ作成関係のアプリが一段落したので、もうちょっと手を入れるか。
というかテスト用のシャイニングスターがそのままなのどうにかしろ。（オートセーブ入れてると上書きされるから忘れがち）
・スタンプモードの波形画面に注視するため再生位置に文字を表示する
・スタンプモードで微調整を可能にするかどうか
　カラオケタグはそこまで微調整に意味がないから独立したTuneモードは作らないでいいとしても、ちょっと動かしたいときもある
・自動チェックの詳細設定（ボタンを押したら設定画面を挟む。設定項目をlocalStrageに保存すべきかどうか）
・TTTestをもうちょっと何とかする。本気を出すならCanvasか？
とかこういうのもGithubのIssueにでも書いたらいいのかね？


21/05/22
いろいろやったのでPointモードの修正にとりかかり完了
Mode_Point.jsが100行ぐらい減った。
あとはStampモードでのUI操作をどうするかと、Tuneモードを作るかどうか。


21/05/19
とりあえず最低限の機能的には完成？
まあルビ必須なのにルビ生成機能は無いから想定運用できないけど。
ルビ付けソフトも前に作ったが、なんかIMEの関係で呼び出しがめちゃくちゃ重くなってる。
（一回の変換関数呼び出しに１秒ほどかかり、１行で数回呼ぶので、数十行の文章でも数分フリーズする）

Web上でやるならヤフーの「ルビ振り」がいいらしいが、アプリID管理がめんどそう。
いちおうIDを隠そうとしないといけないので、機能的にはフロントエンドのみで出来るのにソースからID丸見えで出来ない。
個人で使う用にはID埋め込みhtml単体で、公開用にはHerokuあたりに中継させるか。
と思ったが、クロスドメイン制約とやらのせいでフロントエンドのみでは出来ないのか。
formで送れば生データをブラウザ上に表示できるけど、それに触る手段がない。いやまあ手動でコピペならできるけど。


21/05/16
Stampモードを構築するのにPointモードをベースにしようと見直していたが、
タイムタグ位置表示に、なんとなく疑似要素のbeforeとafterを使ってたけど、
セレクターやら処理の分岐が汚いので書き直したくなった。が、
ここはぐっとこらえて、ある程度全体ができてからやる気が残っていれば。
